<rxui:ReactiveUserControl 
             x:Class="Skmr.ClipToTok.WPF.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Skmr.ClipToTok.WPF"
             xmlns:vm="clr-namespace:Skmr.ClipToTok.ViewModels;assembly=Skmr.ClipToTok"
             x:TypeArguments="vm:SettingsViewModel"
             xmlns:rxui="http://reactiveui.net"
             mc:Ignorable="d" 
             d:DesignWidth="400">
    <Grid>
        <StackPanel>
            <StackPanel.Resources>
                <ResourceDictionary>
                    <Style TargetType="Border" x:Key="OptionPanel">
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="BorderBrush" Value="#909090" />
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </ResourceDictionary>
            </StackPanel.Resources>

            <!-- Base -->
            <Border Style="{StaticResource OptionPanel}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Foreground="White" FontSize="15" Content="Base" />
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="1" Content="Video" Foreground="White"/>
                        <TextBox Grid.Row="0" Grid.Column="2" Margin="2" x:Name="txtSourceVideo" Text="{Binding Settings.Video, UpdateSourceTrigger=PropertyChanged}"/>
                        <Border Grid.Row="0" Grid.Column="3" CornerRadius="5" Background="#202020" Drop="SourceVideo_Drop" AllowDrop="True"/>

                        <Label Grid.Row="1" Grid.Column="1" Content="Resolution" Foreground="White"/>
                        <TextBox Grid.Row="1" Grid.Column="2" Margin="2" Text="{Binding Settings.Resolution, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Row="2" Grid.Column="1" Content="Result Folder" Foreground="White"/>
                        <TextBox Grid.Row="2" Grid.Column="2" Margin="2" x:Name="txtResFolder" Text="{Binding Settings.ResultFolder, UpdateSourceTrigger=PropertyChanged}"/>
                        <Border Grid.Row="2" Grid.Column="3" CornerRadius="5" Background="#202020" Drop="ResultFolder_Drop" AllowDrop="True"/>
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Time Frame -->
            <Border Style="{StaticResource OptionPanel}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Foreground="White" FontSize="15" Content="Time Frame" />
                        <CheckBox Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding Settings.HasTimeFrame}"/>

                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="1" Content="Start" Foreground="White"/>
                        <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding Settings.TimeFrameStart, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                        <Label Grid.Row="0" Grid.Column="3" Content="->" Foreground="White"/>
                        <Label Grid.Row="0" Grid.Column="4" Content="Duration" Foreground="White"/>
                        <TextBox Grid.Row="0" Grid.Column="5" Text="{Binding Settings.TimeFrameDuration, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="5"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="1" Foreground="White" Text="The expected format is: hh:mm:ss"/>
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Change Speed -->
            <Border Style="{StaticResource OptionPanel}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Foreground="White" FontSize="15" Content="Change Speed" />
                        <CheckBox Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding Settings.HasChangeSpeed}"/>

                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="1" Content="Speed" Foreground="White"/>
                        <Slider Grid.Row="0" Grid.Column="2" Value="{Binding Settings.Speed, UpdateSourceTrigger=PropertyChanged}" Minimum=".1"  Maximum="4" TickFrequency="0.1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Settings.Speed, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                    </Grid>
                </StackPanel>
            </Border>

            <!-- Gameplay -->
            <Border Style="{StaticResource OptionPanel}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Foreground="White" FontSize="15" Content="Gameplay" />
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="1" Content="XPos" Foreground="White"/>
                        <Slider Grid.Row="0" Grid.Column="2" Value="{Binding Settings.ScreenPosGameplay.PosX, UpdateSourceTrigger=PropertyChanged}" Maximum="1920" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Settings.ScreenPosGameplay.PosX, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="1" Grid.Column="1" Content="YPos" Foreground="White"/>
                        <Slider Grid.Row="1" Grid.Column="2" Value="{Binding Settings.ScreenPosGameplay.PosY, UpdateSourceTrigger=PropertyChanged}" Maximum="1080" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Settings.ScreenPosGameplay.PosY, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="2" Grid.Column="1" Content="Width" Foreground="White"/>
                        <Slider Grid.Row="2" Grid.Column="2" Value="{Binding Settings.ScreenPosGameplay.Width, UpdateSourceTrigger=PropertyChanged}" Maximum="1920" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding Settings.ScreenPosGameplay.Width, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="3" Grid.Column="1" Content="Height" Foreground="White"/>
                        <Slider Grid.Row="3" Grid.Column="2" Value="{Binding Settings.ScreenPosGameplay.Height, UpdateSourceTrigger=PropertyChanged}" Maximum="1080" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding Settings.ScreenPosGameplay.Height, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Webcam Option -->
            <Border Style="{StaticResource OptionPanel}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Foreground="White" FontSize="15" Content="Webcam" />
                        <CheckBox Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding Settings.HasWebcam}"/>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="1" Content="XPos" Foreground="White"/>
                        <Slider Grid.Row="0" Grid.Column="2" Value="{Binding Settings.ScreenPosWebcam.PosX, UpdateSourceTrigger=PropertyChanged}" Maximum="1920" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Settings.ScreenPosWebcam.PosX, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="1" Grid.Column="1" Content="YPos" Foreground="White"/>
                        <Slider Grid.Row="1" Grid.Column="2" Value="{Binding Settings.ScreenPosWebcam.PosY, UpdateSourceTrigger=PropertyChanged}" Maximum="1080" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Settings.ScreenPosWebcam.PosY, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="2" Grid.Column="1" Content="Width" Foreground="White"/>
                        <Slider Grid.Row="2" Grid.Column="2" Value="{Binding Settings.ScreenPosWebcam.Width, UpdateSourceTrigger=PropertyChanged}" Maximum="1920" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding Settings.ScreenPosWebcam.Width, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="3" Grid.Column="1" Content="Height" Foreground="White"/>
                        <Slider Grid.Row="3" Grid.Column="2" Value="{Binding Settings.ScreenPosWebcam.Height, UpdateSourceTrigger=PropertyChanged}" Maximum="1080" TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding Settings.ScreenPosWebcam.Height, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Background -->
            <Border Style="{StaticResource OptionPanel}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Foreground="White" FontSize="15" Content="Background" />
                        <CheckBox Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding Settings.HasBackground}"/>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="75"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="1" Content="Image" Foreground="White"/>
                        <TextBox Grid.Row="0" Grid.Column="2" x:Name="txtBackgroundImage" Margin="2" Text="{Binding Settings.BackgroundImage}"/>
                        <Border Grid.Row="0" Grid.Column="3" CornerRadius="5" Background="#202020" Drop="BackgroundImage_Drop" AllowDrop="True"/>

                        <Label Grid.Row="1" Grid.Column="1" Content="Alignment" Foreground="White"/>
                        <ComboBox Grid.Row="1" Grid.Column="2" Margin="2"/>
                    </Grid>
                </StackPanel>
            </Border>

            <!-- Color Grading -->
            <Border Style="{StaticResource OptionPanel}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Foreground="White" FontSize="15" Content="Color Grading" />
                        <CheckBox Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding Settings.HasColorGrading}"/>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="1" Content="Contrast" Foreground="White"/>
                        <Slider Grid.Row="0" Grid.Column="2" Value="{Binding Settings.Contrast, UpdateSourceTrigger=PropertyChanged}" Minimum="-1000" Maximum="1000" TickFrequency="1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Settings.Contrast, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="1" Grid.Column="1" Content="Brightness" Foreground="White"/>
                        <Slider Grid.Row="1" Grid.Column="2" Value="{Binding Settings.Brighness, UpdateSourceTrigger=PropertyChanged}" Minimum="-1" Maximum="1" TickFrequency=".1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Settings.Brighness, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="2" Grid.Column="1" Content="Saturation" Foreground="White"/>
                        <Slider Grid.Row="2" Grid.Column="2" Value="{Binding Settings.Saturation, UpdateSourceTrigger=PropertyChanged}" Maximum="3" TickFrequency=".1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding Settings.Saturation, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="3" Grid.Column="1" Content="Gamma" Foreground="White"/>
                        <Slider Grid.Row="3" Grid.Column="2" Value="{Binding Settings.Gamma, UpdateSourceTrigger=PropertyChanged}" Minimum="0.1" Maximum="10" TickFrequency=".1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding Settings.Gamma, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="4" Grid.Column="1" Content="Gamma (Red)" Foreground="White"/>
                        <Slider Grid.Row="4" Grid.Column="2" Value="{Binding Settings.GammaR, UpdateSourceTrigger=PropertyChanged}" Minimum="0.1" Maximum="10" TickFrequency=".1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="4" Grid.Column="3" Text="{Binding Settings.GammaR, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="5" Grid.Column="1" Content="Gamma (Green)" Foreground="White"/>
                        <Slider Grid.Row="5" Grid.Column="2" Value="{Binding Settings.GammaG, UpdateSourceTrigger=PropertyChanged}" Minimum="0.1" Maximum="10" TickFrequency=".1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="5" Grid.Column="3" Text="{Binding Settings.GammaG, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="6" Grid.Column="1" Content="Gamma (Blue)" Foreground="White"/>
                        <Slider Grid.Row="6" Grid.Column="2" Value="{Binding Settings.GammaB, UpdateSourceTrigger=PropertyChanged}" Minimum="0.1" Maximum="10" TickFrequency=".1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="6" Grid.Column="3" Text="{Binding Settings.GammaB, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>

                        <Label Grid.Row="7" Grid.Column="1" Content="Gamma Weight" Foreground="White"/>
                        <Slider Grid.Row="7" Grid.Column="2" Value="{Binding Settings.GammaWeight, UpdateSourceTrigger=PropertyChanged}" Minimum="0.1" Maximum="1" TickFrequency=".1" IsSnapToTickEnabled="True"/>
                        <TextBox Grid.Row="7" Grid.Column="3" Text="{Binding Settings.GammaWeight, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                    </Grid>
                </StackPanel>
            </Border>
        </StackPanel>
    </Grid>
</rxui:ReactiveUserControl>
